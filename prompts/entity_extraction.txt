 

-Goal- 

Given a text document that is potentially relevant to this activity, first identify all entities needed from the text in order to capture the information and ideas in the text. 
Next, report all relationships among the identified entities. 

-Steps- 

1. Identify all entities. For each identified entity, extract the following information: 

- entity_name: Name of the entity, capitalized 

- entity_type: Suggest several labels or categories for the entity. The categories should not be specific, but should be as general as possible. 

- entity_description: Comprehensive description of the entity's attributes and activities, reference the information from the comments. 

Format each entity as ("entity"{tuple_delimiter}<entity_name>{tuple_delimiter}<entity_type>{tuple_delimiter}<entity_description> 

2. From the entities identified in step 1, identify all pairs of (source_entity, target_entity) that are *clearly related* to each other. 

For each pair of related entities, extract the following information: 

- source_entity: name of the source entity, as identified in step 1 

- target_entity: name of the target entity, as identified in step 1 

- relationship_description: explanation as to why you think the source entity and the target entity are related to each other 

- relationship_strength: a numeric score indicating strength of the relationship between the source entity and target entity 

 Format each relationship as ("relationship"{tuple_delimiter}<source_entity>{tuple_delimiter}<target_entity>{tuple_delimiter}<relationship_description>{tuple_delimiter}<relationship_strength>) 

3. Return output in The primary language of the provided text is "English". as a single list of all the entities and relationships identified in steps 1 and 2. Use **{record_delimiter}** as the list delimiter. If you have to translate, just translate the descriptions, nothing else! 

4. When finished, output {completion_delimiter} 

 

-Examples- 

###################### 

 

Example 1: 

 

text: 

CREATE TABLE `client_AffiliateInvoiceReactiveAttribute` ( 

  `Id` int unsigned NOT NULL AUTO_INCREMENT, 

  `AffiliateInvoiceReactiveId` int unsigned NOT NULL COMMENT 'client_AffiliateInvoiceReactive.Id', 

  `ResolutionCodeId` smallint DEFAULT NULL COMMENT 'Resolution type code id, data_ResolutionCode.Id', 

  `AffiliateInvoiceTemplateId` int unsigned DEFAULT NULL COMMENT 'The invoice template of affiliate, affiliate_InvoiceTemplate.Id', 

  `CreateDate` datetime NOT NULL, 

  `CreateUserId` int unsigned NOT NULL, 

  `ModifyDate` datetime DEFAULT CURRENT_TIMESTAMP, 

  `ModifyUserId` int unsigned DEFAULT NULL, 

  PRIMARY KEY (`Id`), 

  UNIQUE KEY `UK_client_AffiliateInvoiceReactiveAttribute` (`AffiliateInvoiceReactiveId`), 

  CONSTRAINT `FK_client_AffiliateInvoiceReactiveAttribute1` FOREIGN KEY (`AffiliateInvoiceReactiveId`) REFERENCES `client_AffiliateInvoiceReactive` (`Id`) ON DELETE RESTRICT ON UPDATE RESTRICT 

) COMMENT='Billing;The invoice attribute of reactive work order from affiliate'; 

------------------------ 

output: 

("entity"{tuple_delimiter}client_AffiliateInvoiceReactiveAttribute{tuple_delimiter}DATABASE_TABLE{tuple_delimiter}The table stores information related to affiliate invoices, including attributes like resolution code, invoice template, creation and modification dates, and user IDs) 

{record_delimiter} 

("entity"{tuple_delimiter}Id{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores the ID of the table client_AffiliateInvoiceReactiveAttribute) 

{record_delimiter} 

("entity"{tuple_delimiter}AffiliateInvoiceReactiveId{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores the ID of the table client_AffiliateInvoiceReactive) 

{record_delimiter} 

("entity"{tuple_delimiter}ResolutionCodeId{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores resolution code ID used in the affiliate invoice process) 

{record_delimiter} 

("entity"{tuple_delimiter}AffiliateInvoiceTemplateId{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores template ID for affiliate invoices) 

{record_delimiter} 

("entity"{tuple_delimiter}CreateDate{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores when the affiliate invoice record was created) 

{record_delimiter} 

("entity"{tuple_delimiter}CreateUserId{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores user who created the affiliate invoice record) 

{record_delimiter} 

("entity"{tuple_delimiter}ModifyDate{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores when the affiliate invoice record was modified) 

{record_delimiter} 

("entity"{tuple_delimiter}ModifyUserId{tuple_delimiter}DATABASE_TABLE_COLUMN{tuple_delimiter}The column stores user who modified the affiliate invoice record) 

{record_delimiter} 

("relationship"{tuple_delimiter}AffiliateInvoiceReactiveId{tuple_delimiter}client_AffiliateInvoiceReactive.Id{tuple_delimiter}The column AffiliateInvoiceReactiveId is a foreign key that references the ID of table client_AffiliateInvoiceReactive{tuple_delimiter}) 

{record_delimiter} 

("relationship"{tuple_delimiter}ResolutionCodeId{tuple_delimiter}data_ResolutionCode.Id{tuple_delimiter}The column ResolutionCodeId references the ID of table data_ResolutionCode{tuple_delimiter}) 

{record_delimiter} 

("relationship"{tuple_delimiter}AffiliateInvoiceTemplateId{tuple_delimiter}affiliate_InvoiceTemplate.Id{tuple_delimiter}The column AffiliateInvoiceTemplateId eferences the ID of table affiliate_InvoiceTemplate{tuple_delimiter}) 

{completion_delimiter} 

("relationship"{tuple_delimiter}CreateUserId{tuple_delimiter}sms_UserProfile.Id{tuple_delimiter}The column CreateUserId references the ID of table sms_UserProfile{tuple_delimiter}) 

{record_delimiter} 

("relationship"{tuple_delimiter}ModifyUserId{tuple_delimiter}sms_UserProfile.Id{tuple_delimiter}The column ModifyUserId eferences the ID of table sms_UserProfile{tuple_delimiter}) 

{completion_delimiter} 



############################# 

 

 

 

-Real Data- 

###################### 

text: {input_text} 

###################### 

output: 